<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ckx.web.persist.mapper.SysConfigMapper">
	<resultMap id="BaseResultMap" type="com.ckx.web.persist.entity.SysConfig">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="config_id" property="configId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="key" property="key" jdbcType="VARCHAR" />
		<result column="value" property="value" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, `key`, `value`,`name`,config_id,remark,update_time,create_time
	</sql>
	
	<select id="paginate" resultMap="BaseResultMap" parameterType="map">
		select 'false' as QUERYID,
		<include refid="Base_Column_List" />
		from sys_config
		<where>
			<if test="configId != null">
				and config_id like CONCAT('%',#{configId,jdbcType=VARCHAR},'%')
			</if>
		</where>
		order by create_time desc 
		limit #{begRow}, #{pageSize}
	</select>
	<select id="paginateCount" resultType="java.lang.Integer"
		parameterType="map">
		select count(0)
		from sys_config
		<where>
			<if test="configId != null">
				and config_id like CONCAT('%',#{configId,jdbcType=VARCHAR},'%')
			</if>
		</where>
	</select>


	<select id="selectByKey" resultMap="BaseResultMap"
		parameterType="map">
		select 'false' as QUERYID,
		<include refid="Base_Column_List" />
		from sys_config
		where `key` = #{key,jdbcType=VARCHAR}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select 'false' as QUERYID,
		<include refid="Base_Column_List" />
		from sys_config
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_config
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.ckx.web.persist.entity.SysConfig">
		insert into sys_config 
		(id, `key`, `value`,name,remark,create_time,config_id)
		values 
		(
		#{id,jdbcType=BIGINT}, #{key,jdbcType=VARCHAR},#{value,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},now(),#{configId,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.ckx.web.persist.entity.SysConfig">
		insert into sys_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="key != null">
				key,
			</if>
			<if test="value != null">
				value,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="key != null">
				#{key,jdbcType=VARCHAR},
			</if>
			<if test="value != null">
				#{value,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ckx.web.persist.entity.SysConfig">
		update sys_config
		<set>
			<if test="key != null">
				`key` = #{key,jdbcType=VARCHAR},
			</if>
			<if test="value != null">
				`value` = #{value,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ckx.web.persist.entity.SysConfig">
		update sys_config
		set `key` = #{key,jdbcType=VARCHAR},
		`value` = #{value,jdbcType=VARCHAR},
		`name`=#{name,jdbcType=VARCHAR},
		`remark`=#{remark,jdbcType=VARCHAR},
		config_id=#{configId,jdbcType=VARCHAR},
		update_time=now()
		where id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateConfig" parameterType="map">
		insert into sys_config (id, `key`, `value`)
		values (#{id,jdbcType=BIGINT}, #{key,jdbcType=VARCHAR},
		#{value,jdbcType=VARCHAR})
		ON DUPLICATE KEY UPDATE
		`value`=#{value,jdbcType=VARCHAR}
	</update>
	
	<delete id="batchDelete" parameterType="arraylist">
		delete from sys_config where id in
		<foreach collection="ids" item="id" index="i" open="(" separator="," close=")">
			#{id,jdbcType=INTEGER}
		</foreach>
	</delete>
</mapper>